{"version":3,"sources":["app/api/agent.ts","app/common/util/util.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/profileStore.ts","app/stores/rootStore.ts","features/nav/NavBar.tsx","features/activities/dashbord/ActivityListItemAttendees.tsx","features/activities/dashbord/ActivityListItem.tsx","features/activities/dashbord/ActivityList.tsx","app/layout/LoadingComponent.tsx","features/activities/dashbord/ActivityFilters.tsx","features/activities/dashbord/ActivityDashbord.tsx","app/common/form/TextInput.tsx","app/common/form/ErrorMessage.tsx","features/user/LoginForm.tsx","features/user/RegisterForm.tsx","features/home/HomePage.tsx","app/models/activity.ts","app/common/form/TextAreaInput.tsx","app/common/form/SelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/DateInput.tsx","features/activities/form/ActivityForm.tsx","app/common/form/DeleteForm.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedSideBar.tsx","features/activities/details/AcitivityDetails.tsx","app/layout/Notfound.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileHeader.tsx","app/common/photoUpload/PhotoWidgetDropzone.tsx","app/common/photoUpload/PhotoWidgetCropper.tsx","app/common/photoUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileCard.tsx","features/profiles/ProfileFollowings.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfilePage.tsx","app/layout/App.tsx","serviceWorker.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["axios","defaults","baseURL","process","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","error","Promise","reject","response","undefined","message","toast","status","data","history","push","method","erros","hasOwnProperty","responseBody","sleep","ms","resolve","setTimeout","requests","url","get","then","body","post","put","delete","file","formData","FormData","append","list","params","details","id","create","activity","update","attend","unattend","current","login","user","register","username","uploadPhoto","photo","setMainPhoto","deletePhoto","updateProfile","profile","follow","unfollow","predicate","listActivities","setActivityProps","date","Date","isGoing","attendees","some","a","usename","userName","isHost","createAttendee","displayName","image","ActivityStore","observable","ref","rootStore","getActivity","activityRegistry","this","reaction","keys","page","clear","loadActivities","activities","sortedActivities","sort","b","getTime","Object","entries","reduce","toISOString","split","URLSearchParams","String","forEach","value","key","Math","ceil","activityCount","groupActivitiesByDate","Array","from","values","Map","action","set","computed","acitvityId","hubConnection","HubConnectionBuilder","withUrl","accessTokenFactory","commonStore","configureLogging","LogLevel","Information","build","start","console","log","state","invoke","catch","on","comment","runInAction","comments","stop","err","async","loadingInitial","agent","axiosParams","activitiesEnvelope","userStore","sumbitting","attendee","event","target","currentTarget","name","loading","filter","UserStore","setToken","modalStore","closeModal","CommonStore","setItem","removeItem","appLoaded","ModalStore","shallow","open","content","modal","ProfileStore","activeTab","loadFollowings","followings","activeIndex","loadingActivities","userActivities","loadingProfile","uploadingPhoto","photos","isMain","find","following","followersCount","profiles","configure","enforceActions","RootStoreContext","createContext","activityStore","profileStore","observer","useContext","logout","Menu","fixed","inverted","Container","Item","header","as","NavLink","exact","to","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","styles","borderColor","borderWidth","ActivityListItemAttendees","List","horizontal","map","Popup","trigger","size","circular","bordered","ActivityListItem","host","x","Segment","Group","marginBottom","Content","Header","title","Description","Label","basic","color","Icon","format","venue","city","secondary","clearing","description","floated","activitiesbyDate","group","divided","LoadingComponent","Dimmer","active","Loader","setPredicate","vertical","width","marginTop","attached","has","onChange","setPage","totalPages","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","hasMore","initialLoad","TextInput","input","type","placeholder","meta","touched","Form","Field","ErrorMessage","Message","statusText","errors","length","flat","i","validate","combineValidators","email","isRequired","password","LoginForm","onSubmit","FORM_ERROR","render","handleSubmit","submitting","submitError","form","invalid","pristine","dirtySinceLastSubmit","textAlign","component","disabled","RegisterForm","HomePage","isLoggedIn","openModal","className","ActivityFormValues","init","category","time","assign","TextAreaInput","rows","SelectInput","options","Select","e","DateInput","rest","onBlur","onKeyDown","preventDefault","composeValidators","hasLengthGreaterThan","match","loadActivity","createActivity","editActivity","setActivity","setLoading","finally","initialValues","dateAndtime","timeString","getHours","getMinutes","year","getFullYear","month","getMonth","day","getDate","dateString","combineDateAndTime","newActivity","uuid","widths","DeleteForm","deleteActivity","activityImageStyle","activityImageTextStyle","bottom","left","height","attendActivity","cancelAttendance","padding","fluid","ActivityDetailedInfo","verticalAlign","createHubConnection","stopHubConnection","addComment","border","Comment","Avatar","Author","Metadata","formatDistance","createdAt","Text","reset","labelPosition","primary","relaxed","ribbon","Extra","NotFound","Inline","Modal","onClose","isCurrentUser","Statistic","label","followingCount","Divider","Reveal","animated","visible","hidden","dropzoneStyles","borderRadius","paddingTop","dropZoneActive","PhotoWidgetDropzone","setFiles","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","setImage","imagePreview","cropper","useRef","aspectRatio","guides","viewMode","dragMode","scalable","cropBoxMovable","cropBoxResizable","crop","getCroppedCanvas","toBlob","blob","files","revokeObjectURL","sub","minHeight","overflow","icone","setMain","addPhotoMode","setAddPhotoMode","setTarget","deleteTarget","setDeleteTarget","Tab","Pane","paddingBottom","Card","itemsPerRow","negative","ProfileCard","extra","ProfileFollowings","panes","menuItem","pane","loadUserActivities","menu","onTabChange","handleTabChange","objectFit","Meta","ProfileActivities","ProfileContent","setActiveTab","menuPosition","loadProfile","withRouter","location","setAppLoaded","getUser","path","ActivityDashbord","AcitivityDetails","ActivityForm","ProfilePage","Boolean","hostname","children","pathname","scrollTo","dateFnsLocalizer","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd30e1f3.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { IActivity, IActivitiesEnvelope } from \"../models/activity\";\r\nimport { history } from \"../..\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IUser, IUserFormValues } from \"../models/user\";\r\nimport { IProfile, IPhoto } from \"../models/profile\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(\r\n  config => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(undefined, error => {\r\n  if (error.message === \"Network Error\" && !error.response) {\r\n    toast.error(\"network error-Api is not running\");\r\n  }\r\n  const { status, data, config } = error.response;\r\n  if (status === 404) {\r\n    history.push(\"/notfound\");\r\n  }\r\n\r\n  if (\r\n    status === 400 &&\r\n    config.method === \"get\" &&\r\n    data.erros.hasOwnProperty(\"id\")\r\n  ) {\r\n    history.push(\"/notfound\"); //za invalidan id koji nije guid\r\n  }\r\n\r\n  if (status === 500) {\r\n    toast.error(\"Server error- check terminal for info\");\r\n  }\r\n\r\n  throw error.response;\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) =>\r\n  new Promise<AxiosResponse>(resolve =>\r\n    setTimeout(() => resolve(response), ms)\r\n  );\r\n\r\nconst requests = {\r\n  get: (url: string) =>\r\n    axios\r\n      .get(url)\r\n      .then(sleep(1000))\r\n      .then(responseBody),\r\n  post: (url: string, body: {}) =>\r\n    axios\r\n      .post(url, body)\r\n      .then(sleep(1000))\r\n      .then(responseBody),\r\n  put: (url: string, body: {}) =>\r\n    axios\r\n      .put(url, body)\r\n      .then(sleep(1000))\r\n      .then(responseBody),\r\n  del: (url: string) =>\r\n    axios\r\n      .delete(url)\r\n      .then(sleep(1000))\r\n      .then(responseBody),\r\n  postForm: (url: string, file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { \"Content-type\": \"multipart/form-data\" }\r\n      })\r\n      .then(responseBody);\r\n  }\r\n};\r\n\r\nconst Activities = {\r\n  list: (params:URLSearchParams): Promise<IActivitiesEnvelope> =>\r\n    axios.get('/activities',{params:params}).then(sleep(1000)).then(responseBody),\r\n  details: (id: string) => requests.get(`/activities/${id}`),\r\n  create: (activity: IActivity) => requests.post(\"/activities\", activity),\r\n  update: (activity: IActivity) =>\r\n    requests.put(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del(`/activities/${id}`),\r\n  attend: (id: string) => requests.post(`/activities/${id}/attend`, {}),\r\n  unattend: (id: string) => requests.del(`/activities/${id}/attend`)\r\n};\r\n\r\nconst User = {\r\n  current: (): Promise<IUser> => requests.get(\"/user\"),\r\n  login: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(`/user/login`, user),\r\n  register: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(`/user/register`, user)\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string): Promise<IProfile> =>\r\n    requests.get(`/profiles/${username}`),\r\n  uploadPhoto: (photo: Blob): Promise<IPhoto> =>\r\n    requests.postForm(`/photos`, photo),\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<IProfile>) =>\r\n    requests.put(\"/profiles\", profile),\r\n  follow: (username: string) =>\r\n    requests.post(`/profiles/${username}/follow`, {}),\r\n  unfollow: (username: string) => requests.del(`/profiles/${username}/follow`),\r\n  list: (username: string, predicate: string) =>\r\n    requests.get(`/profiles/${username}/follow?predicate=${predicate}`),\r\n  listActivities:(username:string,predicate:string)=>requests.get(`/profiles/${username}/activities?predicate=${predicate}`)\r\n};\r\n\r\nexport default {\r\n  Activities,\r\n  User,\r\n  Profiles\r\n};\r\n","import { IActivity, IAttendee } from \"../../models/activity\";\r\nimport { IUser } from \"../../models/user\";\r\n\r\nexport const combineDateAndTime = (date: Date, time: Date) => {\r\n  const timeString = time.getHours() + \":\" + time.getMinutes() + \":00\";\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  const dateString = `${year}-${month}-${day}`;\r\n\r\n  return new Date(dateString + \" \" + timeString);\r\n};\r\n\r\nexport const setActivityProps = (activity: IActivity, user: IUser) => {\r\n  activity.date = new Date(activity.date);\r\n  activity.isGoing = activity.attendees.some(a => a.usename === user.userName);\r\n  activity.isHost = activity.attendees.some(\r\n    a => a.usename === user.userName && a.isHost\r\n  );\r\n\r\n  return activity;\r\n};\r\n\r\n\r\nexport const createAttendee=(user:IUser):IAttendee=>{\r\n    return{\r\n        displayName:user.displayName,\r\n        isHost:false,\r\n        usename:user.userName,\r\n        image:user.image!\r\n\r\n    }\r\n}","import {\r\n  observable,\r\n  action,\r\n  computed,\r\n  configure,\r\n  runInAction,\r\n  toJS,\r\n  reaction,\r\n} from \"mobx\";\r\nimport { createContext, SyntheticEvent } from \"react\";\r\nimport { IActivity } from \"../models/activity\";\r\nimport agent from \"../api/agent\";\r\nimport { history } from \"../..\";\r\nimport { toast } from \"react-toastify\";\r\nimport { RootStore } from \"./rootStore\";\r\nimport { setActivityProps, createAttendee } from \"../common/util/util\";\r\nimport {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\n\r\nconst LIMIT = 2;\r\n\r\nexport default class ActivityStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.page = 0;\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  @observable activityRegistry = new Map();\r\n  @observable activity: IActivity | null = null; //undefined zato jer find to vraća ako ne nadje taj ID\r\n  @observable loadingInitial = false;\r\n  @observable sumbitting = false;\r\n  @observable target = \"\";\r\n  @observable loading = false;\r\n  @observable.ref hubConnection: HubConnection | null = null;\r\n  @observable activityCount = 0;\r\n  @observable page = 0;\r\n  @observable predicate = new Map();\r\n\r\n  @action setPredicate = (predicate: string, value: string | Date) => {\r\n    this.predicate.clear();\r\n    if (predicate !== \"all\") {\r\n      this.predicate.set(predicate, value);\r\n    }\r\n  };\r\n\r\n  @computed get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"limit\", String(LIMIT));\r\n    params.append(\"offset\", `${this.page ? this.page * LIMIT : 0}`);\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, value.toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  @computed get totalPages() {\r\n    return Math.ceil(this.activityCount / LIMIT);\r\n  }\r\n\r\n  @action setPage = (page: number) => {\r\n    this.page = page;\r\n  };\r\n\r\n  @action createHubConnection = (acitvityId: string) => {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(process.env.REACT_APP_API_CHAT_URL!, {\r\n        accessTokenFactory: () => this.rootStore.commonStore.token!,\r\n      })\r\n      .configureLogging(LogLevel.Information)\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .then(() => console.log(this.hubConnection!.state))\r\n      .then(() => {\r\n        console.log(\"Attempting to join group\");\r\n        if (this.hubConnection!.state === \"Connected\")\r\n          this.hubConnection?.invoke(\"AddToGroup\", acitvityId);\r\n      })\r\n      .catch((error) => console.log(\"error connecting: \", error));\r\n\r\n    this.hubConnection.on(\"ReceiveComment\", (comment) => {\r\n      runInAction(() => {\r\n        this.activity!.comments.push(comment);\r\n      });\r\n    });\r\n\r\n    this.hubConnection.on(\"Send\", (message) => {\r\n      console.log(message);\r\n    });\r\n  };\r\n\r\n  @action stopHubConnection = () => {\r\n    this.hubConnection!.invoke(\"RemoveFromGroup\", this.activity!.id)\r\n      .then(() => {\r\n        this.hubConnection!.stop();\r\n      })\r\n      .then(() => console.log(\"Connection stopped\"))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  @action addComment = async (values: any) => {\r\n    values.acitvityId = this.activity!.id;\r\n    try {\r\n      await this.hubConnection!.invoke(\"SendComment\", values); //ime metode iz API-a\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @computed get activitiesbyDate() {\r\n    return this.groupActivitiesByDate(\r\n      Array.from(this.activityRegistry.values())\r\n    );\r\n  }\r\n\r\n  groupActivitiesByDate(activities: IActivity[]) {\r\n    const sortedActivities = activities.sort(\r\n      (a, b) => a.date.getTime() - b.date.getTime()\r\n    );\r\n\r\n    return Object.entries(\r\n      sortedActivities.reduce((activities, activity) => {\r\n        const date = activity.date.toISOString().split(\"T\")[0];\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: IActivity[] })\r\n    ); //kreira se novi array objket key ce biti datum, vallue ce bit array activity\r\n  }\r\n\r\n  @action loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const activitiesEnvelope = await agent.Activities.list(this.axiosParams);\r\n      const { activities, activityCount } = activitiesEnvelope;\r\n      runInAction(\"loading Activities\", () => {\r\n        activities.forEach((activity) => {\r\n          setActivityProps(activity, this.rootStore.userStore.user!);\r\n          this.activityRegistry.set(activity.id, activity);\r\n        });\r\n        this.activityCount = activityCount;\r\n        this.loadingInitial = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(\"loadA tivities Error\", () => {\r\n        this.loadingInitial = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.activity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        runInAction(\"getting acitvity\", () => {\r\n          setActivityProps(activity, this.rootStore.userStore.user!);\r\n          this.activity = activity;\r\n          this.activityRegistry.set(activity.id, activity);\r\n          this.loadingInitial = false;\r\n        });\r\n        return activity;\r\n      } catch (error) {\r\n        runInAction(\"get activity error\", () => {\r\n          this.loadingInitial = false;\r\n        });\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  @action clearActivity = () => {\r\n    this.activity = null;\r\n  };\r\n\r\n  getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  @action createActivity = async (activity: IActivity) => {\r\n    this.sumbitting = true;\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const attendee = createAttendee(this.rootStore.userStore.user!);\r\n      attendee.isHost = true;\r\n      let attendees = [];\r\n      attendees.push(attendee);\r\n      activity.attendees = attendees;\r\n      activity.comments = [];\r\n      activity.isHost = true;\r\n      runInAction(\"creating activity\", () => {\r\n        this.activityRegistry.set(activity.id, activity);\r\n        this.sumbitting = false;\r\n      });\r\n      history.push(`/activities/${activity.id}`);\r\n    } catch (error) {\r\n      runInAction(\"create activity error\", () => {\r\n        this.sumbitting = false;\r\n      });\r\n      toast.error(\"Problem submitting data\");\r\n      console.log(error.response);\r\n    }\r\n  };\r\n  @action editActivity = async (activity: IActivity) => {\r\n    this.sumbitting = true;\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(\"edit activity\", () => {\r\n        this.activityRegistry.set(activity.id, activity);\r\n        this.activity = activity;\r\n        this.sumbitting = false;\r\n      });\r\n      history.push(`/activities/${activity.id}`);\r\n    } catch (error) {\r\n      runInAction(\"edit activity error\", () => {\r\n        this.sumbitting = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action deleteActivity = async (\r\n    event: SyntheticEvent<HTMLButtonElement>,\r\n    id: string\r\n  ) => {\r\n    this.sumbitting = true;\r\n    this.target = event.currentTarget.name;\r\n\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(\"delete activity\", () => {\r\n        this.activityRegistry.delete(id);\r\n        this.sumbitting = false;\r\n        this.target = \"\";\r\n      });\r\n      history.push(`/activities/`);\r\n    } catch (error) {\r\n      runInAction(\"delete activity error\", () => {\r\n        this.sumbitting = false;\r\n        this.target = \"\";\r\n      });\r\n\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action attendActivity = async () => {\r\n    const attendee = createAttendee(this.rootStore.userStore.user!);\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Activities.attend(this.activity!.id);\r\n      runInAction(() => {\r\n        if (this.activity) {\r\n          this.activity.attendees.push(attendee);\r\n          this.activity.isGoing = true;\r\n          this.activityRegistry.set(this.activity.id, this.activity);\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n      this.loading = false;\r\n      toast.error(\"Prob signing up to activiy\");\r\n    }\r\n  };\r\n\r\n  @action cancelAttendance = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.unattend(this.activity!.id);\r\n      runInAction(() => {\r\n        if (this.activity) {\r\n          this.activity.attendees = this.activity.attendees.filter(\r\n            (a) => a.usename !== this.rootStore.userStore.user!.userName\r\n          ); //sadrzava sve osim ulogiranog usera\r\n\r\n          this.activity.isGoing = false;\r\n          this.activityRegistry.set(this.activity.id, this.activity);\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n      toast.error(\"Prob  canelling attendance\");\r\n    }\r\n  };\r\n}\r\n","import { observable, computed, action, runInAction } from \"mobx\";\r\nimport { IUser, IUserFormValues } from \"../models/user\";\r\nimport agent from \"../api/agent\";\r\nimport { RootStore } from \"./rootStore\";\r\nimport { history } from \"../..\";\r\n\r\nexport default class UserStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable user: IUser | null = null;\r\n\r\n  @computed get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  @action login = async (values: IUserFormValues) => {\r\n    try {\r\n      const user = await agent.User.login(values);\r\n      runInAction(\"login\",()=>{\r\n        this.user = user;\r\n      })\r\n      this.rootStore.commonStore.setToken(user.token)\r\n      this.rootStore.modalStore.closeModal();\r\n      history.push('/activities')\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  @action register=async(values:IUserFormValues)=>{\r\n\r\n    try{\r\n      const user=await agent.User.register(values);\r\n      this.rootStore.commonStore.setToken(user.token);\r\n      this.rootStore.modalStore.closeModal();\r\n      history.push('/activities')\r\n\r\n    }catch(error){\r\n      throw error;\r\n\r\n    }\r\n  }\r\n\r\n\r\n@action getUser=async()=>{\r\n  try{\r\n    const user=await agent.User.current();\r\n    runInAction(()=>{\r\n      this.user=user;\r\n    })\r\n  }catch(error){\r\n      console.log(error);\r\n  \r\n  }\r\n}\r\n\r\n  @action logout=()=>{\r\n    this.rootStore.commonStore.setToken(null);\r\n    this.user=null;\r\n    history.push('/')\r\n\r\n    \r\n  }\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, reaction } from \"mobx\";\r\n\r\nexport default class CommonStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n      () => this.token,\r\n      token => {\r\n          if(token){\r\n              window.localStorage.setItem('jwt',token);\r\n          }else{\r\n              window.localStorage.removeItem('jwt')\r\n          }\r\n      }\r\n    );\r\n  }\r\n\r\n  @observable token: string | null = window.localStorage.getItem('jwt');\r\n  @observable appLoaded = false;\r\n\r\n  @action setToken = (token: string | null) => {\r\n    window.localStorage.setItem(\"jwt\", token!);\r\n    this.token = token;\r\n  };\r\n\r\n  @action setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action } from \"mobx\";\r\n\r\nexport default class ModalStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable.shallow modal = {\r\n    open: false,\r\n    body :null\r\n  }\r\n\r\n  @action openModal=(content:any)=>{\r\n      this.modal.open=true;\r\n      this.modal.body=content\r\n  }\r\n\r\n  @action closeModal=()=>{\r\n    this.modal.open=false;\r\n    this.modal.body=null;\r\n}\r\n\r\n}\r\n//shallow observable nee duboko obsevrat body null","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction, computed, reaction } from \"mobx\";\r\nimport { IProfile, IPhoto, IUserActivity } from \"../models/profile\";\r\nimport agent from \"../api/agent\";\r\nimport { toast } from \"react-toastify\";\r\nimport { id } from \"date-fns/locale\";\r\n\r\nexport default class ProfileStore {\r\n  rootStore: RootStore;\r\n\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      activeTab => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  @observable profile: IProfile | null = null;\r\n  @observable loadingProfile = true;\r\n  @observable uploadingPhoto = false;\r\n  @observable loading = false;\r\n  @observable followings: IProfile[] = [];\r\n  @observable activeTab: number = 0;\r\n  @observable userActivities: IUserActivity[] = [];\r\n  @observable loadingActivities = false;\r\n\r\n  @action setActiveTab = (activeIndex: number) => {\r\n    this.activeTab = activeIndex;\r\n  };\r\n\r\n  @computed get isCurrentUser() {\r\n    if (this.rootStore.userStore.user && this.profile) {\r\n      return this.rootStore.userStore.user.userName === this.profile.userName;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  @action loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities=await agent.Profiles.listActivities(username,predicate!);\r\n      runInAction(()=>{\r\n        this.userActivities=activities;\r\n        this.loadingActivities=false;\r\n      })\r\n\r\n    } catch (error) {\r\n      toast.error('Problem loading activities')\r\n      runInAction(()=>{\r\n        this.loadingActivities=false;\r\n      })\r\n    }\r\n  };\r\n\r\n  @action loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action uploadPhoto = async (file: Blob) => {\r\n    this.uploadingPhoto = true;\r\n    try {\r\n      const photo = await agent.Profiles.uploadPhoto(file);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos.push(photo);\r\n          if (photo.isMain && this.rootStore.userStore.user) {\r\n            this.rootStore.userStore.user.image = photo.url;\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploadingPhoto = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(\"Problem uploading photo\");\r\n      runInAction(() => {\r\n        this.uploadingPhoto = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action setMain = async (photo: IPhoto) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      runInAction(() => {\r\n        this.rootStore.userStore.user!.image = photo.url;\r\n        this.profile!.photos.find(a => a.isMain)!.isMain = false;\r\n        this.profile!.photos.find(a => a.id === photo.id)!.isMain = true;\r\n        this.profile!.image = photo.url;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem setting photo as main\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action deletePhoto = async (photo: IPhoto) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        this.profile!.photos = this.profile!.photos.filter(\r\n          a => a.id !== photo.id\r\n        );\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem deleting photo\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action updateProfile = async (profile: Partial<IProfile>) => {\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName !== this.rootStore.userStore.user!.displayName\r\n        ) {\r\n          this.rootStore.userStore.user!.displayName = profile.displayName!;\r\n        }\r\n        this.profile = { ...this.profile!, ...profile };\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem updating profile\");\r\n    }\r\n  };\r\n\r\n  @action follow = async (username: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.follow(username);\r\n      runInAction(() => {\r\n        this.profile!.following = true;\r\n        this.profile!.followersCount++;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem following user\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action unfollow = async (username: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.unfollow(username);\r\n      runInAction(() => {\r\n        this.profile!.following = false;\r\n        this.profile!.followersCount--;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem unfollowing user\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action loadFollowings = async (predicate: string) => {\r\n    this.loading = true;\r\n    try {\r\n      const profiles = await agent.Profiles.list(\r\n        this.profile!.userName,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = profiles;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem loading followings\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import ActivityStore from \"./activityStore\";\r\nimport UserStore from \"./userStore\";\r\nimport { createContext } from \"react\";\r\nimport { configure } from \"mobx\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\n\r\n\r\nconfigure({ enforceActions: \"always\" });//to je globalno ne moras nigde dalje\r\n\r\nexport class RootStore{\r\n    activityStore:ActivityStore;\r\n    userStore:UserStore;\r\n    commonStore:CommonStore;\r\n    modalStore:ModalStore;\r\n    profileStore:ProfileStore;\r\n\r\n    constructor(){\r\n        this.activityStore=new ActivityStore(this);\r\n        this.commonStore=new CommonStore(this)\r\n        this.modalStore=new ModalStore(this);\r\n        this.userStore=new UserStore(this);\r\n        this.profileStore=new ProfileStore(this);\r\n    }\r\n}\r\n\r\nexport const RootStoreContext=createContext(new RootStore());","import React, { useContext } from \"react\";\r\nimport { Menu, Container, Button, Image, Dropdown } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\n\r\nconst NavBar: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { logout, user } = rootStore.userStore;\r\n\r\n  return (\r\n    <Menu fixed=\"top\" inverted>\r\n      <Container>\r\n        <Menu.Item header as={NavLink} exact to=\"/\">\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          SportifyMe\r\n        </Menu.Item>\r\n        <Menu.Item name=\"Activities\" as={NavLink} to=\"/activities\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n        {user && (\r\n          <Menu.Item position=\"right\">\r\n            <Image avatar spaced=\"right\" src={user.image||\"/assets/user.png\"} />\r\n            <Dropdown pointing=\"top left\" text={user.displayName}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  as={Link}\r\n                  to={`/profile/${user.userName}`}\r\n                  text=\"My profile\"\r\n                  icon=\"user\"\r\n                />\r\n                <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )}\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\nexport default observer(NavBar);\r\n","import React from \"react\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { IAttendee } from \"../../../app/models/activity\";\r\n\r\ninterface IProps {\r\n  attendees: IAttendee[];\r\n}\r\nconst styles={\r\n  borderColor:'orange',\r\n  borderWidth:'2'\r\n}\r\nconst ActivityListItemAttendees: React.FC<IProps> = ({ attendees }) => {\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map(attendee => (\r\n        <List.Item key={attendee.usename}>\r\n          <Popup\r\n            header={attendee.displayName}\r\n            trigger={\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? styles:null}\r\n              />\r\n            }\r\n          />\r\n        </List.Item>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ActivityListItemAttendees;\r\n","import React, { useContext } from \"react\";\r\nimport { Item, Button, Label, Segment, Icon } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport { format } from \"date-fns\";\r\nimport ActivityListItemAttendees from \"./ActivityListItemAttendees\";\r\n\r\nconst ActivityListItem: React.FC<{ activity: IActivity }> = ({ activity }) => {\r\n  const host = activity.attendees.filter(x => x.isHost)[0];\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              size=\"tiny\"\r\n              circular\r\n              src={host.image || \"/assets/user.png\"}\r\n              style={{ marginBottom: 3 }}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted by{\" \"}\r\n                <Link to={`/profile/${host.usename}`}> {host.displayName}</Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color=\"orange\"\r\n                    content=\"You are hosting this activity\"\r\n                  ></Label>\r\n                </Item.Description>\r\n              )}\r\n\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color=\"green\"\r\n                    content=\"You are going to this activity\"\r\n                  ></Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <Icon name=\"clock\" />\r\n        {format(activity.date, \"h:mm a\")}\r\n        <Icon name=\"marker\" />\r\n        {activity.venue},{activity.city}\r\n      </Segment>\r\n\r\n      <Segment secondary>\r\n        <ActivityListItemAttendees attendees={activity.attendees} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          floated=\"right\"\r\n          content=\"View\"\r\n          color=\"blue\"\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default ActivityListItem;\r\n","import React, { useContext, Fragment } from \"react\";\r\nimport { Item, Segment, Label } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst ActivityList: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    activitiesbyDate\r\n  } = rootStore.activityStore;\r\n  return (\r\n    <Fragment>\r\n      {activitiesbyDate.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Label size=\"large\" color=\"blue\">\r\n            {format(group,'eeee do MMMM ')}\r\n          </Label>\r\n          \r\n            <Item.Group divided>\r\n              {activities.map(activity => (\r\n                <ActivityListItem key={activity.id} activity={activity} />\r\n              ))}\r\n            </Item.Group>\r\n          \r\n        </Fragment>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\nexport default observer(ActivityList);\r\n","import React from \"react\";\r\nimport {  Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nexport const LoadingComponent: React.FC<{\r\n  inverted?: boolean;\r\n  content?: string;\r\n}> = ({ inverted=true, content }) => {\r\n  return (\r\n    \r\n      <Dimmer active inverted={inverted}>\r\n        <Loader content={content} />\r\n      </Dimmer>\r\n    \r\n  );\r\n};\r\n","import React, { Fragment, useContext } from \"react\";\r\nimport { Menu, Header } from \"semantic-ui-react\";\r\nimport { Calendar } from \"react-widgets\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ActivityFilters = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { predicate, setPredicate } = rootStore.activityStore;\r\n  return (\r\n    <Fragment>\r\n      <Menu vertical size={\"large\"} style={{ width: \"100%\", marginTop: 50 }}>\r\n        <Header icon={\"filter\"} attached color={\"teal\"} content={\"Filters\"} />\r\n        <Menu.Item\r\n          active={predicate.size === 0}\r\n          onClick={() => setPredicate(\"all\", \"true\")}\r\n          color={\"blue\"}\r\n          name={\"all\"}\r\n        />\r\n        <Menu.Item\r\n          active={predicate.has(\"isGoing\")}\r\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\r\n          color={\"blue\"}\r\n          name={\"username\"}\r\n          content={\"I'm Going\"}\r\n        />\r\n        <Menu.Item\r\n          active={predicate.has(\"isHost\")}\r\n          onClick={() => setPredicate(\"isHost\", \"true\")}\r\n          color={\"blue\"}\r\n          name={\"host\"}\r\n          content={\"I'm hosting\"}\r\n        />\r\n      </Menu>\r\n      <Header\r\n        icon={\"calendar\"}\r\n        attached\r\n        color={\"teal\"}\r\n        content={\"Select Date\"}\r\n      />\r\n      <Calendar\r\n        onChange={date => setPredicate(\"startDate\", date!)}\r\n        value={predicate.get(\"startDate\") || new Date()}\r\n      />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityFilters);\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Grid, Button, Loader } from \"semantic-ui-react\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { LoadingComponent } from \"../../../app/layout/LoadingComponent\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\n\r\nconst ActivityDashbord: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadActivities,\r\n    loadingInitial,\r\n    setPage,\r\n    page,\r\n    totalPages\r\n  } = rootStore.activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  const handleGetNext = () => {\r\n    setLoadingNext(true);\r\n    setPage(page + 1);\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadActivities();\r\n  }, [loadActivities]); //[] omogucuje da se jednom samo pokrene,bez toga salje se to u loop\r\n\r\n  if (loadingInitial && page === 0)\r\n    return <LoadingComponent content=\"Loading...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <InfiniteScroll\r\n          pageStart={0}\r\n          loadMore={handleGetNext}\r\n          hasMore={!loadingNext && page + 1 < totalPages}\r\n          initialLoad={false}\r\n        >\r\n          <ActivityList />\r\n        </InfiniteScroll>\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityFilters/>\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext}/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\nexport default observer(ActivityDashbord);\r\n","import React from \"react\";\r\nimport { FieldRenderProps } from \"react-final-form\";\r\nimport { FormFieldProps, Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface IProps extends FieldRenderProps<string, HTMLElement>,\r\nFormFieldProps { }\r\n\r\nconst TextInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  type,\r\n  placeholder,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} type={type} width={width}>\r\n      <input {...input} placeholder={placeholder} />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\nexport default TextInput;\r\n//!! vraća boolean\r\n//...spreda sve propertije dostupne,svi onchange hbadler, on blur handleri i vrijednosti\r\n","import React from \"react\";\r\nimport { AxiosResponse } from \"axios\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface IProps {\r\n  error: AxiosResponse;\r\n  text: string;\r\n}\r\n\r\nconst ErrorMessage: React.FC<IProps> = ({ error, text }) => {\r\n  return (\r\n    <Message error>\r\n      <Message.Header>{error.statusText}</Message.Header>\r\n      {error.data && Object.keys(error.data.errors).length>0 &&(\r\n        <Message.List>\r\n          {Object.values(error.data.errors).flat().map((err,i)=>(\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n\r\n      {text && <Message.Content content={text} />}\r\n    </Message>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useContext } from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Form, Button, Label, Header } from \"semantic-ui-react\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport { IUserFormValues } from \"../../app/models/user\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport { combineValidators, isRequired } from \"revalidate\";\r\nimport ErrorMessage from \"../../app/common/form/ErrorMessage\";\r\n\r\nconst validate = combineValidators({\r\n  email: isRequired(\"Email\"),\r\n  password: isRequired(\"Password\")\r\n});\r\nexport const LoginForm = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { login } = rootStore.userStore;\r\n  return (\r\n    <FinalForm\r\n      validate={validate}\r\n      onSubmit={(values: IUserFormValues) =>\r\n        login(values).catch(error => ({\r\n          [FORM_ERROR]: error\r\n        }))\r\n      }\r\n      render={({\r\n        handleSubmit,\r\n        submitting,\r\n        form,\r\n        submitError,\r\n        invalid,\r\n        pristine,\r\n        dirtySinceLastSubmit\r\n      }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Header as='h2' content='Login ' color='teal' textAlign='center'/>\r\n          <Field name=\"email\" component={TextInput} placeholder=\"Email\" />\r\n          <Field\r\n            name=\"password\"\r\n            component={TextInput}\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n          />\r\n          {submitError &&!dirtySinceLastSubmit && (\r\n            <ErrorMessage error={submitError} text='Invalid email or password'/>\r\n          )}\r\n          <Button\r\n            disabled={invalid && !dirtySinceLastSubmit || pristine}\r\n            loading={submitting}\r\n            positive\r\n            content=\"Login\"\r\n          />\r\n          \r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Form, Button, Label, Header } from \"semantic-ui-react\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport { IUserFormValues } from \"../../app/models/user\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport { combineValidators, isRequired } from \"revalidate\";\r\nimport ErrorMessage from \"../../app/common/form/ErrorMessage\";\r\n\r\n\r\nexport const RegisterForm = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { register } = rootStore.userStore;\r\n  return (\r\n    <FinalForm\r\n      onSubmit={(values: IUserFormValues) =>\r\n        register(values).catch(error => ({\r\n          [FORM_ERROR]: error\r\n        }))\r\n      }\r\n      render={({\r\n        handleSubmit,\r\n        submitting,\r\n        submitError,\r\n        invalid,\r\n        pristine,\r\n        dirtySinceLastSubmit\r\n      }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Header as='h2' content='Sign Up ' color='teal' textAlign='center'/>\r\n          <Field name=\"username\" component={TextInput} placeholder=\"username\" />\r\n          <Field name=\"displayname\" component={TextInput} placeholder=\"displayname\" />\r\n          <Field name=\"email\" component={TextInput} placeholder=\"Email\" />\r\n          <Field\r\n            name=\"password\"\r\n            component={TextInput}\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n          />\r\n          {submitError &&!dirtySinceLastSubmit && (\r\n            <ErrorMessage error={submitError} text='Invalid email or password'/>\r\n          )}\r\n          <Button\r\n            disabled={invalid && !dirtySinceLastSubmit || pristine}\r\n            loading={submitting}\r\n            positive\r\n            content=\"Register\"\r\n          />\r\n          \r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n","import React, { useContext, Fragment } from \"react\";\r\nimport { Container, Segment, Header, Button, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport { LoginForm } from \"../user/LoginForm\";\r\nimport { RegisterForm } from \"../user/RegisterForm\";\r\n\r\nconst HomePage = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { isLoggedIn, user } = rootStore.userStore;\r\n  const { openModal } = rootStore.modalStore;\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Home\r\n        </Header>\r\n        {isLoggedIn && user ? (\r\n          <Fragment>\r\n            <Header as=\"h2\" inverted content={`Welcome ${user.displayName}`} />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities.\r\n            </Button>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <Header as=\"h2\" inverted content=\"Welcome to SportifyMe\" />\r\n            <Button onClick={()=>openModal(<LoginForm/>)} size=\"huge\" inverted>\r\n              Login\r\n            </Button>\r\n            <Button onClick={()=>openModal(<RegisterForm/>)} size=\"huge\" inverted>\r\n              Register\r\n            </Button>\r\n          </Fragment>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\nexport default HomePage;\r\n","export interface IActivitiesEnvelope {\r\n    activities:IActivity[],\r\n    activityCount:number\r\n}\r\n\r\n\r\nexport interface IActivity{\r\n    id:string;\r\n    title:string;\r\n    description:string;\r\n    category:string;\r\n    date:Date;\r\n    city:string;\r\n    venue:string;\r\n    isGoing:boolean;\r\n    isHost:boolean;\r\n    attendees:IAttendee[];\r\n    comments:IComment[];\r\n}\r\n\r\nexport interface IActivityFormValues extends Partial <IActivity>{\r\n    time?:Date\r\n\r\n}\r\n\r\nexport class ActivityFormValues implements IActivityFormValues{\r\n    id?: string=undefined;\r\n    title:string= \"\";\r\n    category:string =\"\";\r\n    description:string= \"\";\r\n    date?:Date= undefined;\r\n    time?:Date=undefined;\r\n    city: string=\"\";\r\n    venue: string=\"\"\r\n\r\n\r\n    constructor(init?:IActivityFormValues){\r\n        if(init && init.date){\r\n            init.time=init.date\r\n        }\r\n\r\n        Object.assign(this,init);\r\n    }\r\n}\r\n\r\n\r\nexport interface IAttendee{\r\n    usename:string;\r\n    displayName:string;\r\n    image:string;\r\n    isHost:boolean;\r\n    following?:boolean;\r\n}\r\n\r\n\r\nexport interface IComment{\r\n    id:string;\r\n    createdAt:Date;\r\n    body:string;\r\n    displayName:string;\r\n    image:string;\r\n    username:string\r\n}\r\n//Partial radi atribute optional","import React from \"react\";\r\nimport { FieldRenderProps } from \"react-final-form\";\r\nimport { FormFieldProps, Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<string, HTMLElement>,\r\n    FormFieldProps {}\r\n\r\n const TextAreaInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  rows,\r\n  placeholder,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (<Form.Field error={touched && !!error}  width={width}>\r\n    <textarea rows={rows} {...input} placeholder={placeholder} />\r\n    {touched && error && (\r\n      <Label basic color=\"red\">\r\n        {error}\r\n      </Label>\r\n    )}\r\n  </Form.Field>);\r\n};\r\nexport default TextAreaInput;","import React from \"react\";\r\nimport { FieldRenderProps } from \"react-final-form\";\r\nimport { FormFieldProps, Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<string, HTMLElement>,\r\n    FormFieldProps {}\r\nexport const SelectInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  options,\r\n  placeholder,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} width={width}>\r\n      <Select value={input.value} \r\n      onChange={(e,data)=>input.onChange(data.value)}\r\n      placeholder={placeholder}\r\n      options={options}\r\n      />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n","export const category = [\r\n  { key: 'tennis', text: 'Tennis', value: 'tennis' },\r\n  { key: 'soccer', text: 'Soccer', value: 'soccer' },\r\n  { key: 'swimming', text: 'Swimming', value: 'swimming' },\r\n  { key: 'baskteball', text: 'Basketball', value: 'baskteball' },\r\n  { key: 'gym', text: 'Gym', value: 'gym' },\r\n  { key: 'volleyball', text: 'Volleyball', value: 'volleyball' }\r\n];","import React from \"react\";\r\nimport { FieldRenderProps } from \"react-final-form\";\r\nimport { FormFieldProps, Form, Label, Select } from \"semantic-ui-react\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\ninterface IProps extends FieldRenderProps<Date, HTMLElement>, FormFieldProps {}\r\n\r\n const DateInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  id = null,\r\n  placeholder,\r\n  date = false,\r\n  time = false,\r\n  meta: { touched, error },\r\n  ...rest //da imamo sve propretije za datetimepicker\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} width={width}>\r\n      <DateTimePicker\r\n        placeholder={placeholder}\r\n        value={input.value || null}\r\n        onChange={input.onChange}\r\n        date={date}\r\n        time={time}\r\n        onBlur={input.onBlur}\r\n        onKeyDown={(e)=>e.preventDefault()}\r\n        {...rest}\r\n      />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\nexport default DateInput;","import React, { useState, FormEvent, useContext, useEffect } from \"react\";\r\nimport { Segment, Form, Button, Grid } from \"semantic-ui-react\";\r\nimport {\r\n  IActivityFormValues,\r\n  ActivityFormValues\r\n} from \"../../../app/models/activity\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport ActivityStore from \"../../../app/stores/activityStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport TextInput from \"../../../app/common/form/TextInput\";\r\nimport TextAreaInput from \"../../../app/common/form/TextAreaInput\";\r\nimport { SelectInput } from \"../../../app/common/form/SelectInput\";\r\nimport { category } from \"../../../app/common/options/categoryOptions\";\r\nimport DateInput from \"../../../app/common/form/DateInput\";\r\nimport { combineDateAndTime } from \"../../../app/common/util/util\";\r\nimport {\r\n  combineValidators,\r\n  isRequired,\r\n  composeValidators,\r\n  hasLengthGreaterThan\r\n} from \"revalidate\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\n\r\nconst validate = combineValidators({\r\n  title: isRequired({ message: \"Title is required\" }),\r\n  category: isRequired(\"Category\"),\r\n  description: composeValidators(\r\n    isRequired(\"Description\"),\r\n    hasLengthGreaterThan(4)({ message: \"Description too short, atleast 5 charachters\" })\r\n  )(),\r\n  city:isRequired('City'),\r\n  venue:isRequired('Venue'),\r\n  date:isRequired('Date'),\r\n  time:isRequired('Time')\r\n\r\n});\r\n\r\ninterface DetailParams {\r\n  id: string;\r\n}\r\n\r\nconst ActivityForm: React.FC<RouteComponentProps<DetailParams>> = ({\r\n  match,\r\n  history\r\n}) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    sumbitting,\r\n    activity: initialFormState,\r\n    loadActivity,\r\n    createActivity,\r\n    editActivity\r\n  } = rootStore.activityStore;\r\n\r\n  const [activity, setActivity] = useState<IActivityFormValues>(\r\n    new ActivityFormValues()\r\n  );\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    if (match.params.id) {\r\n      setLoading(true);\r\n      loadActivity(match.params.id)\r\n        .then(activity => setActivity(new ActivityFormValues(activity)))\r\n        .finally(() => setLoading(false));\r\n    }\r\n  }, [loadActivity, match.params.id]);\r\n\r\n  // const handleinputChange = (\r\n  //   event: FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  // ) => {\r\n  //   const { name, value } = event.currentTarget;\r\n  //   setActivity({ ...activity, [name]: value }); //...spread properties, utjecat ce na sve prpopertije koji se izmjene\r\n  // };\r\n\r\n  // const handlesubmit = () => {\r\n  //   if (activity.id.length === 0) {\r\n  //     let newActivity = {\r\n  //       ...activity,\r\n  //       id: uuid()\r\n  //     };\r\n  //     createActivity(newActivity).then(() =>\r\n  //       history.push(`/activities/${newActivity.id}`)\r\n  //     );\r\n  //   } else {\r\n  //     editActivity(activity).then(() =>\r\n  //       history.push(`/activities/${activity.id}`)\r\n  //     );\r\n  //   }\r\n  // };\r\n\r\n  const handleFinalFormSubmit = (values: any) => {\r\n    const dateAndtime = combineDateAndTime(values.date, values.time);\r\n    const { date, time, ...activity } = values; //unutar ...activity je sve sto je u values osim date and time\r\n    activity.date = dateAndtime;\r\n\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid()\r\n      };\r\n      createActivity(newActivity);\r\n    } else {\r\n      editActivity(activity);\r\n    }\r\n  };\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <Segment clearing>\r\n          <FinalForm\r\n          validate={validate}\r\n            initialValues={activity}\r\n            onSubmit={handleFinalFormSubmit}\r\n            render={({ handleSubmit,invalid,pristine }) => (\r\n              <Form onSubmit={handleSubmit} loading={loading}>\r\n                <Field\r\n                  name=\"title\"\r\n                  placeholder=\"Title\"\r\n                  value={activity.title}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"description\"\r\n                  placeholder=\"Description\"\r\n                  value={activity.description}\r\n                  rows={3}\r\n                  component={TextAreaInput}\r\n                />\r\n                <Field\r\n                  name=\"category\"\r\n                  placeholder=\"Category\"\r\n                  value={activity.category}\r\n                  options={category}\r\n                  component={SelectInput}\r\n                />\r\n\r\n                <Form.Group widths=\"equal\">\r\n                  <Field\r\n                    name=\"date\"\r\n                    placeholder=\"Date\"\r\n                    date={true}\r\n                    value={activity.date}\r\n                    component={DateInput}\r\n                  />\r\n                  <Field\r\n                    name=\"time\"\r\n                    placeholder=\"Time\"\r\n                    value={activity.date}\r\n                    time={true}\r\n                    component={DateInput}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Field\r\n                  name=\"city\"\r\n                  placeholder=\"City\"\r\n                  value={activity.city}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"venue\"\r\n                  placeholder=\"Venue\"\r\n                  value={activity.venue}\r\n                  component={TextInput}\r\n                />\r\n                <Button\r\n                  loading={sumbitting}\r\n                  disabled={loading || invalid || pristine}\r\n                  floated=\"right\"\r\n                  positive\r\n                  type=\"submit\"\r\n                  content=\"Submit\"\r\n                />\r\n                <Button\r\n                  onClick={\r\n                    activity.id\r\n                      ? () => history.push(`/activities/${activity.id}`)\r\n                      : () => history.push(\"/activities\")\r\n                  }\r\n                  disabled={loading}\r\n                  floated=\"right\"\r\n                  type=\"button\"\r\n                  content=\"Cancel\"\r\n                />\r\n              </Form>\r\n            )}\r\n          />\r\n        </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\nexport default observer(ActivityForm);\r\n","import React, { useContext } from \"react\";\r\nimport { Header, Button } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\nimport { IActivity } from \"../../models/activity\";\r\n\r\n\r\nexport const DeleteForm: React.FC<{ activity: IActivity }> = ({ activity }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n\r\n  const { closeModal } = rootStore.modalStore;\r\n  const { deleteActivity } = rootStore.activityStore;\r\n\r\n  return (\r\n    <div>\r\n      <Header>Are You sure you want to delete this activity?</Header>\r\n      <Button\r\n        color=\"red\"\r\n        content=\"Delete\"\r\n        onClick={(e) => deleteActivity(e,activity.id).then(()=>closeModal())}\r\n      ></Button>\r\n      <Button\r\n        type=\"button\"\r\n        content=\"Cancel\"\r\n        onClick={() => closeModal()}\r\n      ></Button>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { Segment, Item, Header, Button, Image } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { RegisterForm } from \"../../user/RegisterForm\";\r\nimport { DeleteForm } from \"../../../app/common/form/DeleteForm\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\",\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\",\r\n};\r\n\r\nconst ActivityDetailedHeader: React.FC<{ activity: IActivity }> = ({\r\n  activity,\r\n}) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const host = activity.attendees.filter((x) => x.isHost)[0];\r\n  const { openModal } = rootStore.modalStore;\r\n  const { attendActivity, cancelAttendance, loading } = rootStore.activityStore;\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        <Image\r\n          src={`/assets/categoryImages/${activity.category}.jpg`}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment basic style={activityImageTextStyle}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date, \"eeee do MMMM\")}</p>\r\n                <p>\r\n                  Hosted by{\" \"}\r\n                  <Link to={`/profile/${host.usename}`}>\r\n                    <strong>{host.displayName}</strong>\r\n                  </Link>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <Button.Group widths={2}>\r\n            <Button\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n              color=\"orange\"\r\n              floated=\"right\"\r\n            >\r\n              Manage Event\r\n            </Button>\r\n\r\n            <Button\r\n             onClick={()=>openModal(<DeleteForm activity={activity}/>)}\r\n              color=\"red\"\r\n              floated=\"left\"\r\n            >\r\n              Delete\r\n            </Button>\r\n          </Button.Group>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={cancelAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button loading={loading} onClick={attendActivity} color=\"teal\">\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\nexport default observer(ActivityDetailedHeader);\r\n","import React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst ActivityDetailedInfo: React.FC<{ activity: IActivity }> = ({\r\n  activity\r\n}) => {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>\r\n              {format(activity.date, \"eeee do MMMM\")} at{\" \"}\r\n              {format(activity.date, \"h:mm a\")}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\nexport default ActivityDetailedInfo;\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport { Segment, Header, Form, Button, Comment } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { Link } from \"react-router-dom\";\r\nimport TextAreaInput from \"../../../app/common/form/TextAreaInput\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { formatDistance } from \"date-fns\";\r\nconst ActivityDetailedChat = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    createHubConnection,\r\n    stopHubConnection,\r\n    addComment,\r\n    activity\r\n  } = rootStore.activityStore;\r\n  useEffect(() => {\r\n    createHubConnection(activity!.id);\r\n    return () => {\r\n      stopHubConnection();\r\n    };\r\n  }, [createHubConnection, stopHubConnection,activity]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        attached=\"top\"\r\n        inverted\r\n        color=\"teal\"\r\n        style={{ border: \"none\" }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Comment.Group>\r\n          {activity &&\r\n            activity.comments &&\r\n            activity.comments.map((comment) => (\r\n              <Comment key={comment.id}>\r\n                <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\r\n                <Comment.Content>\r\n                  <Comment.Author as={Link} to={`/profile/${comment.username}`}>\r\n                    {comment.displayName}\r\n                  </Comment.Author>\r\n                  <Comment.Metadata>\r\n                    <div>{formatDistance(comment.createdAt,new Date())}</div>\r\n                  </Comment.Metadata>\r\n                  <Comment.Text>{comment.body}</Comment.Text>\r\n                </Comment.Content>\r\n              </Comment>\r\n            ))}\r\n          <FinalForm\r\n            onSubmit={addComment}\r\n            render={({ handleSubmit, submitting, form }) => (\r\n              <Form onSubmit={()=>handleSubmit()!.then(()=>form.reset())}>\r\n                <Field name='body'\r\n                component={TextAreaInput}\r\n                rows={2}\r\n                placeholder='Add your comment'\r\n                />\r\n                <Button\r\n                  content=\"Add Reply\"\r\n                  labelPosition=\"left\"\r\n                  icon=\"edit\"\r\n                  primary\r\n                  loading={submitting}\r\n                />\r\n              </Form>\r\n            )}\r\n          />\r\n        </Comment.Group>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default observer(ActivityDetailedChat);\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, List, Item, Label, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IAttendee } from \"../../../app/models/activity\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface IProps {\r\n  attendees: IAttendee[];\r\n}\r\n\r\nconst ActivityDetailedSideBar: React.FC<IProps> = ({ attendees }) => {\r\n  return (\r\n    <Fragment>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map(attendee => (\r\n            <Item key={attendee.usename} style={{ position: \"relative\" }}>\r\n             {attendee.isHost&&\r\n              <Label\r\n                style={{ position: \"absolute\" }}\r\n                color=\"orange\"\r\n                ribbon=\"right\"\r\n              >\r\n             \r\n                Host\r\n              </Label>}\r\n              <Image size=\"tiny\" src={attendee.image||\"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profile/${attendee.usename}`}>{attendee.displayName}</Link>\r\n                </Item.Header>\r\n                {attendee.following &&\r\n                <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default observer(ActivityDetailedSideBar);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport ActivityStore from \"../../../app/stores/activityStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RouteComponentProps, Link } from \"react-router-dom\";\r\nimport { LoadingComponent } from \"../../../app/layout/LoadingComponent\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedSideBar from \"./ActivityDetailedSideBar\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\n\r\ninterface DetailParams {\r\n  id: string;\r\n}\r\n\r\nconst AcitivityDetails: React.FC<RouteComponentProps<DetailParams>> = ({\r\n  match,history\r\n}) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { activity: activity, loadActivity, loadingInitial } = rootStore.activityStore;\r\n\r\n  useEffect(() => {\r\n    loadActivity(match.params.id)\r\n  }, [loadActivity, match.params.id,history]);\r\n\r\n  if (loadingInitial || !activity)\r\n    return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n  if (!activity) return <h2></h2>;\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSideBar attendees={activity.attendees} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(AcitivityDetails);\r\n","import React from 'react';\r\nimport { Segment, Button, Header, Icon } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Oops - we've looked everywhere but couldn't find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to Activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, { useContext } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\n const ModalContainer = () => {\r\n  const rootStore=useContext(RootStoreContext);\r\n  const{modal:{open,body},closeModal}=rootStore.modalStore\r\n  \r\n    return (\r\n    <Modal open={open} onClose={closeModal} size='mini'>\r\n      <Modal.Content>{body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\nexport default observer (ModalContainer)","import React from \"react\";\r\nimport {\r\n  Segment,\r\n  Item,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Statistic,\r\n  Divider,\r\n  Reveal\r\n} from \"semantic-ui-react\";\r\nimport { IProfile } from \"../../app/models/profile\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface IProps {\r\n  profile: IProfile;\r\n  isCurrentUser: boolean;\r\n  loading: boolean;\r\n  follow: (username: string) => void;\r\n  unfollow: (username: string) => void;\r\n}\r\n\r\nconst ProfileHeader: React.FC<IProps> = ({\r\n  profile,\r\n  isCurrentUser,\r\n  loading,\r\n  follow,\r\n  unfollow\r\n}) => {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image! || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\">{profile.displayName}</Header>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          {!isCurrentUser && (\r\n            <Reveal animated=\"move\">\r\n              <Reveal.Content visible style={{ width: \"100%\" }}>\r\n                <Button\r\n                  fluid\r\n                  color=\"teal\"\r\n                  content={profile.following ? \"Following\" : \"Not Following\"}\r\n                />\r\n              </Reveal.Content>\r\n              <Reveal.Content hidden>\r\n                <Button\r\n                  loading={loading}\r\n                  fluid\r\n                  basic\r\n                  color={profile.following ? \"red\" : \"green\"}\r\n                  content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n                  onClick={\r\n                    profile.following\r\n                      ? () => unfollow(profile.userName)\r\n                      : () => follow(profile.userName)\r\n                  }\r\n                />\r\n              </Reveal.Content>\r\n            </Reveal>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileHeader);\r\n","import React, {useCallback} from 'react'\r\nimport {useDropzone} from 'react-dropzone'\r\nimport { Icon, Header } from 'semantic-ui-react'\r\n\r\ninterface IProps{\r\n    setFiles:(files:object[])=>void;\r\n}\r\n\r\nconst dropzoneStyles={\r\n    border:'dashed 3px ',\r\n    borderColor:'#eee',\r\n    borderRadius:'5px',\r\n    paddingTop:'30px',\r\n    textAlign:'center'as 'center',\r\n    height:'200px'\r\n}\r\n\r\nconst dropZoneActive={\r\n    borderColor:'green'\r\n}\r\nconst PhotoWidgetDropzone:React.FC<IProps>=({setFiles})=> {\r\n  const onDrop = useCallback(acceptedFiles => {\r\n      setFiles(acceptedFiles.map((file:object)=>Object.assign(file,{\r\n          preview:URL.createObjectURL(file)//ovo moram unmountat da ne ostane u memoriji\r\n      })))\r\n\r\n  }, [])\r\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? {...dropzoneStyles,...dropZoneActive}:dropzoneStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name='upload' size='huge'/>\r\n      <Header content='Drop image here'/>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default PhotoWidgetDropzone;","import React, { useRef } from \"react\";\r\nimport Cropper from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport { type } from \"os\";\r\n\r\ninterface IProps {\r\n  setImage: (file: Blob) => void;\r\n  imagePreview: string;\r\n}\r\n\r\nconst PhotoWidgetCropper: React.FC<IProps> = ({ setImage, imagePreview }) => {\r\n  const cropper = useRef<Cropper>(null);\r\n  const cropImage = () => {\r\n    if (\r\n      cropper.current &&\r\n      typeof cropper.current.getCroppedCanvas() === \"undefined\"\r\n    ) {\r\n      return;\r\n    }\r\n    cropper &&\r\n      cropper.current &&\r\n      cropper.current.getCroppedCanvas().toBlob((blob: any) => {\r\n        setImage(blob);\r\n      }, \"image/jpeg\");\r\n  };\r\n  return (\r\n    <Cropper\r\n      ref={cropper}//izmjena u d.ts.filu\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      // Cropper.js options\r\n      aspectRatio={1 / 1} //square image\r\n      guides={false}\r\n      viewMode={1} //ne moze slik izvan canvasa\r\n      dragMode=\"move\"\r\n      scalable={true}\r\n      cropBoxMovable={true}\r\n      cropBoxResizable={true}\r\n      crop={cropImage}\r\n      preview='.img-preview'\r\n    />\r\n  );\r\n};\r\n\r\nexport default PhotoWidgetCropper;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Header, Grid, Image, Button } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\n\r\ninterface IProps {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nconst PhotoUploadWidget: React.FC<IProps> = ({ loading, uploadPhoto }) => {\r\n  const [files, setFiles] = useState<any[]>([]);\r\n  const [image, setImage] = useState<Blob | null>(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach(file => URL.revokeObjectURL(file.preview)); //ovo unmounta\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid>\r\n        <Grid.Column width={4}>\r\n          <Header color=\"teal\" sub content=\"Step 1 - Add Photo\" />\r\n          <PhotoWidgetDropzone setFiles={setFiles} />\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n        <Grid.Column width={4}>\r\n          <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n          {files.length > 0 && (\r\n            <PhotoWidgetCropper\r\n              setImage={setImage}\r\n              imagePreview={files[0].preview}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n        <Grid.Column width={4}>\r\n          <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n          {files.length > 0 && (\r\n            <Fragment>\r\n              <div\r\n                className=\"img-preview\"\r\n                style={{ minHeight: \"200px\", overflow: \"hidden\" }}\r\n              />\r\n              <Button.Group widths={2}>\r\n                <Button\r\n                  positive\r\n                  icone='check'\r\n                  loading={loading}\r\n                  onClick={() => uploadPhoto(image!)}\r\n                />\r\n                <Button\r\n                  icone='close'\r\n                  disabled={loading}\r\n                  onClick={() => setFiles([])}\r\n                />\r\n              </Button.Group>\r\n            </Fragment>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(PhotoUploadWidget);\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Tab, Header, Card, Image, Button, Grid } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport PhotoUploadWidget from \"../../app/common/photoUpload/PhotoUploadWidget\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ProfilePhotos = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    profile,\r\n    isCurrentUser,\r\n    uploadPhoto,\r\n    uploadingPhoto,\r\n    setMain,\r\n    loading,\r\n    deletePhoto\r\n  } = rootStore.profileStore;\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState<string | undefined>(undefined);\r\n  const [deleteTarget, setDeleteTarget] = useState<string | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const handleUploadImage = (photo: Blob) => {\r\n    uploadPhoto(photo).then(() => setAddPhotoMode(false));\r\n  };\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16} style={{ paddingBottom: 0 }}>\r\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handleUploadImage}\r\n              loading={uploadingPhoto}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile &&\r\n                profile.photos.map(photo => (\r\n                  <Card key={photo.id}>\r\n                    <Image src={photo.url} />\r\n                    {isCurrentUser && (\r\n                      <Button.Group fluid widths={2}>\r\n                        <Button\r\n                          name={photo.id}\r\n                          loading={loading && target === photo.id}\r\n                          onClick={e => {\r\n                            setMain(photo);\r\n                            setTarget(e.currentTarget.name);\r\n                          }}\r\n                          basic\r\n                          disabled={photo.isMain}\r\n                          positive\r\n                          content=\"Main\"\r\n                        />\r\n                        <Button\r\n                          name={photo.id}\r\n                          disabled={photo.isMain}\r\n                          loading={loading && deleteTarget === photo.id}\r\n                          onClick={e => {\r\n                            deletePhoto(photo);\r\n                            setDeleteTarget(e.currentTarget.name);\r\n                          }}\r\n                          basic\r\n                          negative\r\n                          icon=\"trash\"\r\n                        />\r\n                      </Button.Group>\r\n                    )}\r\n                  </Card>\r\n                ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\nexport default observer(ProfilePhotos);\r\n","import React from 'react';\r\nimport { Card, Image, Icon} from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IProfile } from '../../app/models/profile';\r\n\r\ninterface IProps{\r\n    profile:IProfile\r\n}\r\n\r\nconst ProfileCard: React.FC<IProps> = ({profile}) => {\r\n  return (\r\n    <Card as={Link} to={`/profile/${profile.userName}`}>\r\n      <Image src={profile.image ||'/assets/user.png'} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <div>\r\n          <Icon name='user' />\r\n          {profile.followersCount}\r\n        </div>\r\n      </Card.Content>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","import React, { useContext } from \"react\";\r\nimport { Tab, Grid, Header, Card } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nconst ProfileFollowings = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    profile,\r\n    followings,\r\n    loading,\r\n    activeTab\r\n  } = rootStore.profileStore;\r\n\r\n \r\n  return (\r\n    <Tab.Pane loading={loading}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n                activeTab===3\r\n                ? `People following ${profile!.displayName}`\r\n                : `People ${profile!.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={5}>\r\n            {followings.map(profile => (\r\n              <ProfileCard key={profile.userName} profile={profile}/>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default ProfileFollowings;\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IUserActivity } from \"../../app/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\n\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"futureEvents\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"pastEvents\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosted\" } }\r\n];\r\n\r\nconst ProfileEvents = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadUserActivities,\r\n    profile,\r\n    loadingActivities,\r\n    userActivities\r\n  } = rootStore.profileStore!;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.userName);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    data: TabProps\r\n  ) => {\r\n    let predicate;\r\n    switch (data.activeIndex) {\r\n      case 1:\r\n        predicate = \"past\";\r\n        break;\r\n      case 2:\r\n        predicate = \"hosting\";\r\n        break;\r\n      default:\r\n        predicate = \"future\";\r\n        break;\r\n    }\r\n    loadUserActivities(profile!.userName, predicate);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: IUserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileEvents);\r\n","import React from 'react'\r\nimport {Tab} from 'semantic-ui-react'\r\nimport  ProfilePhotos  from './ProfilePhotos'\r\nimport ProfileFollowings from './ProfileFollowings'\r\nimport ProfileActivities from './ProfileActivities'\r\n\r\nconst panes=[\r\n{menuItem:'About', render:()=><Tab.Pane>About content</Tab.Pane>},\r\n{menuItem:'Photos', render:()=><ProfilePhotos/>},\r\n{menuItem:'Activities', render:()=><ProfileActivities/>},\r\n{menuItem:'Followers', render:()=><ProfileFollowings/>},\r\n{menuItem:'Following', render:()=><ProfileFollowings/>},\r\n]\r\n\r\n\r\ninterface IProps{\r\nsetActiveTab:(activeIndex:any)=>void;\r\n}\r\n\r\n const ProfileContent :React.FC<IProps>=({setActiveTab}) => {\r\n    return (\r\n        <Tab \r\n        menu={{fluid:true, vertical:true}}\r\n        menuPosition='right'\r\n        panes={panes}\r\n        onTabChange={(e,data)=>setActiveTab(data.activeIndex)}\r\n       \r\n        />\r\n        \r\n    )\r\n}\r\n\r\nexport default ProfileContent;","import React, { useContext, useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { LoadingComponent } from \"../../app/layout/LoadingComponent\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface RouteParams{\r\n  username:string\r\n}\r\n\r\ninterface IProps extends RouteComponentProps<RouteParams>{}\r\n\r\nconst ProfilePage:React.FC<IProps> = ({match}) => {\r\n  const rootStore=useContext(RootStoreContext);\r\n  const{setActiveTab,loadingProfile,profile,loadProfile,follow,unfollow,isCurrentUser,loading}=rootStore.profileStore;\r\n\r\n  useEffect(()=>{\r\n    loadProfile(match.params.username)\r\n  },[loadProfile,match])\r\n\r\n  if(loadingProfile) return <LoadingComponent content='Loading profile...'/>\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        <ProfileHeader profile={profile!} isCurrentUser={isCurrentUser} follow={follow} unfollow={unfollow} loading={loading}/>\r\n        <ProfileContent setActiveTab={setActiveTab}/>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePage);\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport NavBar from \"../../features/nav/NavBar\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport ActivityDashbord from \"../../features/activities/dashbord/ActivityDashbord\";\r\nimport {\r\n  Route,\r\n  withRouter,\r\n  RouteComponentProps,\r\n  Switch\r\n} from \"react-router-dom\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\r\nimport AcitivityDetails from \"../../features/activities/details/AcitivityDetails\";\r\nimport NotFound from \"./Notfound\";\r\nimport {ToastContainer} from 'react-toastify'\r\nimport { LoginForm } from \"../../features/user/LoginForm\";\r\nimport { RootStoreContext } from \"../stores/rootStore\";\r\nimport { LoadingComponent } from \"./LoadingComponent\";\r\nimport  ModalContainer  from \"../common/modals/ModalContainer\";\r\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\r\n\r\nconst App: React.FC<RouteComponentProps> = ({ location }) => {\r\n  const rootStore=useContext(RootStoreContext);\r\n  const{setAppLoaded,token,appLoaded}=rootStore.commonStore;\r\n  const{getUser}=rootStore.userStore;\r\n\r\n\r\n  useEffect(()=>{\r\n    if(token){\r\n      getUser().finally(()=>setAppLoaded())\r\n    }else{\r\n      setAppLoaded();\r\n    }\r\n  },[getUser,setAppLoaded,token])\r\n\r\n\r\n\r\n  if(!appLoaded ) return <LoadingComponent content='Loading app'/>\r\n  return (\r\n    <Fragment>\r\n      <ModalContainer/>\r\n      <ToastContainer position='bottom-right'/>\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <Fragment>\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <Switch>\r\n                <Route exact path=\"/activities\" component={ActivityDashbord} />\r\n                <Route path=\"/activities/:id\" component={AcitivityDetails} />\r\n                <Route\r\n                  key={location.key}\r\n                  path={[\"/createActivity\", \"/manage/:id\"]}\r\n                  component={ActivityForm}\r\n                />\r\n\r\n                <Route path='/profile/:username' component={ProfilePage} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </Fragment>\r\n        )}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\nexport default withRouter(observer(App)); //observer je za activity store, s wthrouter ima pritup location propertijjima\r\n//'/(.+)' sve razlicito od toga nije home page\r\n\r\n//svo koji rade s observable su observeri!!!\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","\r\nimport { useEffect } from \"react\";\r\nimport { useLocation, withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollToTop=({children,location:{pathname}}:any)=> {\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return children;\r\n}\r\n\r\nexport default withRouter(ScrollToTop)","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./app/layout/styles.css\";\r\nimport App from \"./app/layout/App\";\r\nimport 'react-toastify/dist/ReactToastify.min.css';\r\nimport {createBrowserHistory} from 'history'\r\nimport { BrowserRouter,Router } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\r\nimport 'react-widgets/dist/css/react-widgets.css';\r\nimport dateFnsLocalizer from 'react-widgets-date-fns';\r\n\r\n\r\ndateFnsLocalizer()\r\n\r\n\r\n\r\nexport const history=createBrowserHistory()\r\nReactDOM.render(\r\n  <Router history={history}>\r\n    <ScrollToTop>\r\n      <App />\r\n    </ScrollToTop>\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}